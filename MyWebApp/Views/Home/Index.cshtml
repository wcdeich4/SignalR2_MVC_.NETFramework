<h2>SignalR2 MVC Example</h2>
<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessageID" value="Send" />
    <input type="hidden" id="displayname" value="DefaultName" />
    <ul id="discussion">
    </ul>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // remember cammel casing for JavaScript standard notation - even though the C# class uses pascal casing
            //mySignalRHub  
            //not
            //MySignalRHub
            var myHub = $.connection.mySignalRHub;
            // Create a function that the hub can call back to display messages.
            myHub.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.  
            $('#message').focus();

            
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessageID').click(function () {
                    // Call the Send method on the hub. 
                    //remember to change the first letter to lowercase
                    //SignalR changes the method name to camelCase
                    //because JavaScript standard is camelCase
                    //eventhough the .NET standard is PascalCase
                    myHub.server.frontendToFrontend($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment. 
                    $('#message').val('').focus();
                });
            });

      //      */
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}